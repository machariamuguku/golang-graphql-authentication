# GraphQL schema

# base user
type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
}

# user registration input
input RegisterUserInput {
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  password: String!
}

# a field validation errors object
type FieldErrors {
  field: String!
  error: String!
}

# register user payload
type RegisterUserPayload {
  user: User
  jwtToken: String
  statusCode: Int!
  message: String!
  fieldErrors: [FieldErrors]!
}

# user login input
input LoginUserInput {
  email: String!
  phoneNumber: String!
  password: String!
}

# login user payload
type LoginUserPayload {
  user: User
  jwtToken: String
  statusCode: Int!
  message: String!
}

# request user payload
type UserPayload {
  user: User!
  statusCode: Int!
  message: String!
}

# scalar Time

# All queries
type Query {
  loginUser(input: LoginUserInput!): LoginUserPayload!
  users: [UserPayload!]!
  user(id: String!): UserPayload!
}

# All mutations
type Mutation {
  registerUser(input: RegisterUserInput!): RegisterUserPayload!
}
